name: Hackerrank CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Run Tree Height solutions
      run: ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-height
    - name: Run Tree Level Order solutions
      run: ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-level-order
    - name: Run Balanced Brackets solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/balanced-brackets
       rm foo.txt
      env:
        OUTPUT_PATH: foo.txt
    - name: Run Trie Contacts solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/trie/contacts
       rm foo.txt
      env:
        EXT: go
        OUTPUT_PATH: foo.txt
    - name: Run Heap Median cpp solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/heap/median
       rm foo.txt
      env:
        EXT: cpp
        OUTPUT_PATH: foo.txt
    - name: Run Stacks Maximum Element solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/maximum-element
      env:
        EXT: go
    - name: Run Equal Stacks solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/equal-stacks
       rm foo.txt
      env:
        EXT: go
        OUTPUT_PATH: foo.txt
    - name: Run Two Stacks solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/two-stacks
       rm foo.txt
      env:
        EXT: go
        OUTPUT_PATH: foo.txt
    - name: Run Two Stacks solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/two-stacks
       rm foo.txt
      env:
        EXT: cpp
        OUTPUT_PATH: foo.txt
    - name: Run Largest Rectangle solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/largest-rectangle
       rm foo.txt
      env:
        EXT: go
        OUTPUT_PATH: foo.txt
    - name: Run And Xor OR solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/and-xor-or
       rm foo.txt
      env:
        EXT: cpp
        OUTPUT_PATH: foo.txt
    - name: Run Text Editor solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/text-editor
      env:
        EXT: cpp
    - name: Run Poisonous Plants solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/stacks/poisonous-plants
       rm foo.txt
      env:
        EXT: cpp
        OUTPUT_PATH: foo.txt
    - name: Run Tree Preorder Traversal solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-preorder-traversal
      env:
        EXT: cpp
    - name: Run Tree Postorder Traversal solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-postorder-traversal
      env:
        EXT: cpp
    - name: Run Tree Inorder Traversal solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-inorder-traversal
      env:
        EXT: cpp
    - name: Run Tree Top View solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-top-view
      env:
        EXT: cpp
    - name: Run Tree Huffman Decoding solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/trees/tree-huffman-decoding
      env:
        EXT: cpp
    - name: Run Heap Qheap1 solutions
      run: |
       ./hackerrank/test.sh ./hackerrank/data_structures/heap/qheap1
      env:
        EXT: cpp
